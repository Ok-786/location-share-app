{"version":3,"sources":["views/auth-context.js","views/http-hook.js","views/LoadingSpinner.js","views/Backdrop.js","components/Card.js","views/MainHeader.js","views/NavLinks.js","views/SideDrawer.js","views/MainNavigation.js","views/auth-hook.js","components/MainNavigation.js","views/activate.js","views/Verified.js","Routes.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","Card","style","children","MainHeader","NavLinks","auth","useContext","to","exact","Fragment","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","drawerIsOpen","openDrawerHandler","closeDrawerHandler","logoutTimer","state","setState","this","Component","activate","Verified","dataTemp","console","log","data1","JSON","parse","localStorage","getItem","confirmed","process","stringify","removeItem","verification","Home","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","Routes","routes","setToken","setUserId","tokenExpirationD","setTokenExpirationD","uid","expirationDate","tokenExpirationDate","Date","getTime","setItem","expiration","clear","remainingTime","setTimeout","clearTimeout","storedData","useAuth","data","path","component","verified","Provider","value","fallback","render","querySelector"],"mappings":"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","file":"static/js/main.e64024d0.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    var activeHttpRequests = useRef([]);\r\n    \r\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        try {\r\n            setIsLoading(true);\r\n            const httpAbortCtrl = new AbortController();\r\n            activeHttpRequests.current.push(httpAbortCtrl);\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortCtrl.signal\r\n            });\r\n\r\n            const responseData = await response.json();\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                reqCtrl => reqCtrl !== httpAbortCtrl\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message)\r\n            }\r\n            setIsLoading(false);\r\n            return responseData;\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n            throw err;\r\n        }\r\n        \r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        return() => {\r\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n        }\r\n    }, [])\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\n\nimport '../css/LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport '../css/Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\n\nimport '../css/Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\r\nimport '../css/MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return (\r\n        <header className=\"main-header\">\r\n            {props.children}\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default MainHeader;","import React, { useContext } from 'react'\r\nimport '../css/NavLinks.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AuthContext } from './auth-context';\r\n\r\n\r\nexport default function NavLinks(props) {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul className=\"nav-links\">\r\n            <li>\r\n                <NavLink to=\"/\" exact>All USERS</NavLink>\r\n            </li>\r\n\r\n            {auth.isLoggedIn &&\r\n                <React.Fragment>\r\n                    <li>\r\n                        <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n                    </li>\r\n                </React.Fragment>}\r\n            {!auth.isLoggedIn &&\r\n                <li>\r\n                    <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n                </li>}\r\n            {auth.isLoggedIn &&\r\n                <li>\r\n                    <NavLink to=\"/auth\"onClick={auth.logout}>LOGOUT</NavLink>\r\n                </li>}\r\n        </ul>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport '../css/SideDrawer.css';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst SideDrawer = (props) => {\r\n    const content =\r\n        <CSSTransition\r\n            in={props.show}\r\n            timeout={200}\r\n            classNames=\"slide-in-left\"\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <aside className={\"side-drawer\"} onClick={props.onClick}>{props.children}</aside>\r\n        </CSSTransition>\r\n\r\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'))\r\n}\r\n\r\nexport default SideDrawer;\r\n","import React from 'react'\r\nimport MainHeader from './MainHeader';\r\nimport '../css/MainNavigation.css';\r\nimport { Link } from 'react-router-dom';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from './Backdrop';\r\n\r\nexport default function MainNavigation({ drawerIsOpen, openDrawerHandler, closeDrawerHandler }) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {drawerIsOpen && (\r\n                <Backdrop onClick={closeDrawerHandler} />\r\n            )}\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n                <nav className=\"main-navigation__drawwer-nav\">\r\n                    <NavLinks />\r\n                </nav>\r\n            </SideDrawer>\r\n            <MainHeader>\r\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n                    <span />\r\n                    <span />\r\n                    <span />\r\n                </button>\r\n                <h1 className=\"main-navigation__title\">\r\n                    <Link to=\"/\">\r\n                        YourPlaces\r\n                    </Link>\r\n                </h1>\r\n                <nav className=\"main-navigation__header-nav\">\r\n                    <NavLinks />\r\n                </nav>\r\n            </MainHeader>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false);\r\n    const [userId, setUserId] = useState();\r\n    const [tokenExpirationD, setTokenExpirationD] = useState();\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n        setToken(token);\r\n        setUserId(uid);\r\n        const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);  //this generates the time of (current time + one hour)\r\n        setTokenExpirationD(tokenExpirationDate);\r\n        console.log(tokenExpirationDate);\r\n        localStorage.setItem('userData', JSON.stringify({ expiration: tokenExpirationDate, userId: uid, token: token }));\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        setTokenExpirationD(null);\r\n        localStorage.clear();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (token && tokenExpirationD) {\r\n            const remainingTime = tokenExpirationD.getTime() - new Date().getTime();    //get remaining time in milli seconds by useing date\r\n            logoutTimer = setTimeout(logout, remainingTime);\r\n        } else {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, [token, logout, tokenExpirationD])\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        console.log(storedData)\r\n        if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n        }\r\n    }, [login]);\r\n\r\n    return { token, login, logout, userId};\r\n}","import React, { Component } from 'react'\r\nimport View from '../views/MainNavigation';\r\n\r\nexport default class MainNavigation extends Component {\r\n    state={drawerIsOpen:false};\r\n\r\n    openDrawerHandler = ()=> {\r\n        this.setState({drawerIsOpen:true});\r\n    }\r\n    closeDrawerHandler = () => {\r\n        this.setState({drawerIsOpen:false});\r\n    }\r\n    \r\n    render(props) {\r\n        return (\r\n            <View drawerIsOpen={this.state.drawerIsOpen} openDrawerHandler={this.openDrawerHandler} closeDrawerHandler={this.closeDrawerHandler} />\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Card from '../components/Card';\r\n\r\nexport default function activate() {\r\n    return (\r\n        <div className='center' >\r\n            <Card>\r\n                <h3>Mail has been sent to your email, kindly verify it to proceed!</h3>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { AuthContext } from './auth-context';\r\nimport { useHttpClient } from './http-hook';\r\n\r\nconst Verified = () => {\r\n    const {sendRequest} = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const verification = async () => {\r\n            var dataTemp = null;\r\n            try {\r\n                console.log('im in')\r\n                const data1 = JSON.parse(localStorage.getItem('authData'));\r\n                console.log(data1)\r\n                if (data1) {\r\n                    var responseData = null;\r\n                    console.log(dataTemp)\r\n                    dataTemp = {\r\n                        userId: data1.userId,\r\n                        token: data1.token,\r\n                        confirmed: true\r\n                    }\r\n                    console.log(dataTemp)\r\n                    // try {\r\n                    //     responseData = await sendRequest('http://localhost:8000/api/users/auth',\r\n                    //         'POST',\r\n                    //         dataTemp,\r\n                    //         {'Content-Type': 'application/json'}\r\n                    //     );\r\n                    // }\r\n                    try {\r\n                        responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/auth`,\r\n                            'POST',\r\n                            JSON.stringify({\r\n                                userId: data1.userId,\r\n                                token: data1.token,\r\n                                confirmed: data1.confirmed\r\n                            }),\r\n                            {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                        )\r\n                    } catch (err) { console.log(err) }\r\n                    localStorage.removeItem('authData');\r\n\r\n                    console.log('im innnnn')\r\n                    // localStorage.setItem('authData', JSON.stringify(dataTemp))\r\n                    console.log(responseData.userId+ '   11111111')\r\n                    auth.login(responseData.userId, responseData.token);\r\n                }\r\n            } catch (err) {\r\n                console.log('adadasd' + err)\r\n                //not handling errors here because the errors are being handled in our custom hook (http-hook)\r\n            }\r\n        }\r\n\r\n        verification();\r\n    }, [sendRequest])\r\n\r\n    return (\r\n        <div>\r\n            email verified!\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Verified;\r\n","import React, { Suspense } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport MainNavigation from './components/MainNavigation';\r\n// import Home from './pages/Users';\r\n// import NewPlace from './components/NewPlace';\r\n// import UserPlaces from './pages/UserPlaces';\r\n// import UpdatePlace from './pages/UpdatePlace';\r\n// import Auth from './views/Auth';\r\nimport { AuthContext } from './views/auth-context';\r\nimport { useAuth } from './views/auth-hook';\r\nimport activate from './views/activate';\r\nimport verified from './views/Verified';\r\nimport LoadingSpinner from './views/LoadingSpinner';\r\n\r\nconst Home = React.lazy(() => import('./pages/Users'));\r\nconst NewPlace = React.lazy(() => import('./components/NewPlace'));\r\nconst UserPlaces = React.lazy(() => import('./pages/UserPlaces'));\r\nconst UpdatePlace = React.lazy(() => import('./pages/UpdatePlace'));\r\nconst Auth = React.lazy(() => import('./views/Auth'));\r\n\r\nexport default function Routes() {\r\n    const { token, login, logout, userId } = useAuth();\r\n    const data = JSON.parse(localStorage.getItem('authData'));\r\n\r\n    let routes;\r\n    if (token) {\r\n        routes = (\r\n            <Switch>\r\n                <Route path='/auth/verified' component={verified} exact />\r\n                <Route path='/' component={Home} exact />\r\n                <Route path='/:userId/places' component={UserPlaces} exact />\r\n                <Route path='/places/new' component={NewPlace} exact />\r\n                <Route path='/places/:placeId' component={UpdatePlace} exact />\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        );\r\n    } else {\r\n        routes = (\r\n            <Switch>\r\n                <Route path='/auth/verified' component={verified} exact />\r\n                <Route path='/auth/activate' component={activate} exact />\r\n                <Route path='/' component={Home} exact />\r\n                <Route path='/:userId/places' component={UserPlaces} exact />\r\n                <Route path='/auth' component={Auth} exact />\r\n\r\n                {data ? <Redirect to=\"/auth/Verified\" /> : <Redirect to=\"/auth\" />}\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isLoggedIn: !!token, token: token, userId: userId, login: login, logout: logout }}>\r\n            <Router>\r\n                <MainNavigation />\r\n                <main>\r\n                    <Suspense fallback={\r\n                        <div className=\"center\">\r\n                            <LoadingSpinner />\r\n                        </div>\r\n                    }>\r\n                        {routes}\r\n                    </Suspense>\r\n                </main>\r\n            </Router>\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport Routes from './Routes';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <Routes />,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}